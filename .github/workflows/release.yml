name: Release

permissions:
  contents: write

on:
  workflow_dispatch:

jobs:
  
  release:
    runs-on: ubuntu-latest
    outputs:
      upload_url: ${{ steps.create_release.outputs.upload_url }}
      version: ${{ env.GitBuildVersionSimple }}
    steps:
      - uses: actions/checkout@v4
        with:
          fetch-depth: 0

      - name: Nerdbank.GitVersioning
        uses: dotnet/nbgv@master
        with:
          setCommonVars: true

      - name: Create Release
        id: create_release
        uses: softprops/action-gh-release@v2
        with:
          name: Release ${{ env.GitBuildVersionSimple }}
          tag_name: ${{ env.GitBuildVersionSimple }}
          body_path: CHANGELOG.md
          fail_on_unmatched_files: true
          files: |
            CHANGELOG.md
            LICENSE
  
  windows:
    needs: release
    runs-on: windows-latest
    steps:
      - uses: actions/checkout@v4
        with:
          fetch-depth: 0

      - name: Setup dotnet
        uses: actions/setup-dotnet@v3
        with:
          dotnet-version: '9.0.x'

      - name: Restore
        run: dotnet restore DiscordMusic.sln
        working-directory: ./src

      - name: Build
        run: dotnet build DiscordMusic.sln --configuration Release --no-restore
        working-directory: ./src

      - name: Test
        run: dotnet test DiscordMusic.sln --configuration Release --no-restore
        working-directory: ./src

      - name: Publish
        run: |
          dotnet publish DiscordMusic.Client/DiscordMusic.Client.csproj --configuration Release --output publish/win-x64 --runtime win-x64
          dotnet publish DiscordMusic.Client/DiscordMusic.Client.csproj --configuration Release --output publish/win-x86 --runtime win-x86
          dotnet publish DiscordMusic.Client/DiscordMusic.Client.csproj --configuration Release --output publish/win-arm64 --runtime win-arm64
        working-directory: ./src

      - name: Zip
        run: |
          Compress-Archive -Path ./publish/win-x64/* -DestinationPath ./publish/dm_win_x64_${{ needs.release.outputs.version }}.zip
          Compress-Archive -Path ./publish/win-x86/* -DestinationPath ./publish/dm_win_x86_${{ needs.release.outputs.version }}.zip
          Compress-Archive -Path ./publish/win-arm64/* -DestinationPath ./publish/dm_win_arm64_${{ needs.release.outputs.version }}.zip
        working-directory: ./src

      - name: Upload Release Assets
        id: upload_release
        uses: softprops/action-gh-release@v2
        working-directory: ./src
        with:
          name: Release ${{ needs.release.outputs.version }}
          tag_name: ${{ needs.release.outputs.version }}
          fail_on_unmatched_files: true
          files: |
            ./publish/dm_win_x64_${{ needs.release.outputs.version }}.zip
            ./publish/dm_win_x86_${{ needs.release.outputs.version }}.zip
            ./publish/dm_win_arm64_${{ needs.release.outputs.version }}.zip
  
  
  linux:
    needs: release
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v4
        with:
          fetch-depth: 0

      - name: Setup dotnet
        uses: actions/setup-dotnet@v3
        with:
          dotnet-version: '9.0.x'

      - name: Restore
        run: dotnet restore DiscordMusic.sln
        working-directory: ./src

      - name: Build
        run: dotnet build DiscordMusic.sln --configuration Release --no-restore
        working-directory: ./src

      - name: Test
        run: dotnet test DiscordMusic.sln --configuration Release --no-restore
        working-directory: ./src

      - name: Publish
        run: |
          dotnet publish DiscordMusic.Client/DiscordMusic.Client.csproj --configuration Release --output publish/linux-x64 --runtime linux-x64
          dotnet publish DiscordMusic.Client/DiscordMusic.Client.csproj --configuration Release --output publish/linux-musl-x64 --runtime linux-musl-x64
          dotnet publish DiscordMusic.Client/DiscordMusic.Client.csproj --configuration Release --output publish/linux-musl-arm64 --runtime linux-musl-arm64
          dotnet publish DiscordMusic.Client/DiscordMusic.Client.csproj --configuration Release --output publish/linux-arm --runtime linux-arm
          dotnet publish DiscordMusic.Client/DiscordMusic.Client.csproj --configuration Release --output publish/linux-arm64 --runtime linux-arm64
        working-directory: ./src

      - name: Zip
        run: |
          (cd linux-x64 && zip -r ../linux-x64/dm_linux_x64_${{ needs.release.outputs.version }}.zip .)
          (cd linux-musl-x64 && zip -r ../linux-musl-x64/dm_linux_musl_x64_${{ needs.release.outputs.version }}.zip .)
          (cd linux-musl-arm64 && zip -r ../linux-musl-arm64/dm_linux_musl_arm64_${{ needs.release.outputs.version }}.zip .)
          (cd linux-arm && zip -r ../linux-arm/dm_linux_arm_${{ needs.release.outputs.version }}.zip .)
          (cd linux-arm64 && zip -r ../linux-arm64/dm_linux_arm64_${{ needs.release.outputs.version }}.zip .)
        working-directory: ./src/publish/

      - name: Upload Release Assets
        id: upload_release
        uses: softprops/action-gh-release@v2
        working-directory: ./src
        with:
          name: Release ${{ needs.release.outputs.version }}
          tag_name: ${{ needs.release.outputs.version }}
          fail_on_unmatched_files: true
          files: |
            ./publish/linux-x64/dm_linux_x64_${{ needs.release.outputs.version }}.zip
            ./publish/linux-musl-x64/dm_linux_musl_x64_${{ needs.release.outputs.version }}.zip
            ./publish/linux-musl-arm64/dm_linux_musl_arm64_${{ needs.release.outputs.version }}.zip
            ./publish/linux-arm/dm_linux_arm_${{ needs.release.outputs.version }}.zip
            ./publish/linux-arm64/dm_linux_arm64_${{ needs.release.outputs.version }}.zip
  
  
  macos:
    needs: release
    runs-on: macos-latest
    steps:
      - uses: actions/checkout@v4
        with:
          fetch-depth: 0

      - name: Setup dotnet
        uses: actions/setup-dotnet@v3
        with:
          dotnet-version: '9.0.x'

      - name: Restore
        run: dotnet restore DiscordMusic.sln
        working-directory: ./src

      - name: Build
        run: dotnet build DiscordMusic.sln --configuration Release --no-restore
        working-directory: ./src

      - name: Test
        run: dotnet test DiscordMusic.sln --configuration Release --no-restore
        working-directory: ./src

      - name: Publish
        run: |
          dotnet publish DiscordMusic.Client/DiscordMusic.Client.csproj --configuration Release --output publish/osx-x64 --runtime osx-x64
          dotnet publish DiscordMusic.Client/DiscordMusic.Client.csproj --configuration Release --output publish/osx-arm64 --runtime osx-arm64
        working-directory: ./src

      - name: Zip
        run: |
          (cd osx-x64 && zip -r ../osx-x64/dm_osx_x64_${{ needs.release.outputs.version }}.zip .)
          (cd osx-arm64 && zip -r ../osx-arm64/dm_osx_arm64_${{ needs.release.outputs.version }}.zip .)
        working-directory: ./src/publish/

      - name: Upload Release Assets
        id: upload_release
        uses: softprops/action-gh-release@v2
        working-directory: ./src
        with:
          name: Release ${{ needs.release.outputs.version }}
          tag_name: ${{ needs.release.outputs.version }}
          fail_on_unmatched_files: true
          files: |
            ./publish/osx-x64/dm_osx_x64_${{ needs.release.outputs.version }}.zip
            ./publish/osx-arm64/dm_osx_arm64_${{ needs.release.outputs.version }}.zip
